CREATE OR REPLACE PROCEDURE BOOST()
BEGIN
DECLARE ACCURACY DOUBLE DEFAULT 0;
DECLARE TEMP DOUBLE;
DECLARE totalcol INTEGER;
DECLARE MID INTEGER;
DECLARE CUR INTEGER;
L1: LOOP
SELECT CAL_ACCURACY() INTO TEMP FROM sysibm.sysdummy1;
IF TEMP<ACCURACY THEN
	leave L1;
END IF;
SET ACCURACY=TEMP;
FOR COL AS colcursor CURSOR FOR select count(*) as C from sysibm.syscolumns where tbname = 'TRAINDATASET' and name not in ('DECISION', 'ID')
DO
SET TOTALCOL = COL.C;
END FOR;
SELECT MAX(ID) into MID from vtrain;
SET CUR=0;
SET MID=MID+1; 
FOR ROW as rowcursor CURSOR FOR SELECT V.ID,V.COL,V.VALUE,V.DECISION FROM VTRAIN AS V INNER JOIN TRAIN_PREDICTED AS T ON T.ID=V.ID where T.DECISION!=V.DECISION
DO
IF CUR= totalcol+1 THEN
	SET CUR=0;
	SET MID = MID+1;
END IF;
INSERT INTO VTRAIN VALUES(MID,ROW.COL,ROW.VALUE,ROW.DECISION);
SET CUR = CUR+1;
END FOR;
EXECUTE IMMEDIATE 'DELETE FROM PROB';
EXECUTE IMMEDIATE 'DELETE FROM TRAIN_PREDICTED';
EXECUTE IMMEDIATE 'DELETE FROM TEST_PREDICTED';
CALL CALCULATE_PROB();
CALL PREDICT();
END LOOP;
END
@
CALL BOOST()
@